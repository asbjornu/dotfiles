#!/usr/bin/env bash

# Make nano the default editor.
export EDITOR=/usr/local/bin/nano;

# Enable persistent REPL history for `node`.
export NODE_REPL_HISTORY=~/.node_history;
# Allow 32³ entries; the default is 1000.
export NODE_REPL_HISTORY_SIZE='32768';
# Use sloppy mode by default, matching web browsers.
export NODE_REPL_MODE='sloppy';

# Make Python use UTF-8 encoding for output to stdin, stdout, and stderr.
export PYTHONIOENCODING='UTF-8';

# Increase Bash history size. Allow 32³ entries; the default is 500.
export HISTSIZE='32768';
export HISTFILESIZE="${HISTSIZE}";
# Omit duplicates and commands that begin with a space from history.
export HISTCONTROL='ignoreboth';

# Prefer US English and use UTF-8.
export LANG='en_US.UTF-8';
export LC_ALL='en_US.UTF-8';

# Highlight section titles in manual pages.
export LESS_TERMCAP_md="${yellow}";

# Don’t clear the screen after quitting a manual page.
export MANPAGER='less -X';

# Avoid issues with `gpg` as installed via Homebrew.
# https://stackoverflow.com/a/42265848/96656
export GPG_TTY=$(tty);

# Hide the “default interactive shell is now zsh” warning on macOS.
export BASH_SILENCE_DEPRECATION_WARNING=1;

# Asbjørn Ulsberg's old and custom exports
export PATH="/usr/local/bin:/usr/local/sbin:/usr/bin:$PATH";
#export PATH="$HOME/.rbenv/shims:$PATH";
export MANPATH=/opt/local/share/man:$MANPATH;
export CLICOLOR=1;
export LSCOLORS=gxfxcxdxbxaxhdxxbhgaga;
export SVN_EDITOR=/usr/local/bin/atom;
export HISTCONTROL=erasedups;
export HISTSIZE=10000;

# Homebrew
_PREFIX="/usr/local/opt"
if command -v brew &> /dev/null; then
  _PREFIX=$(brew --prefix)
elif [[ -f /opt/homebrew/bin/brew ]]; then
  _PREFIX=$(/opt/homebrew/bin/brew --prefix)
fi
export PATH="${_PREFIX}/bin:${PATH}"
export LDFLAGS="-L${_PREFIX}/lib"
export CPPFLAGS="-I${_PREFIX}/include"
export PKG_CONFIG_PATH="${_PREFIX}/lib/pkgconfig:${PKG_CONFIG_PATH}"

# TTY for GPG Agent
GPG_TTY=$(tty)
export GPG_TTY

# NVM
export NVM_DIR="${HOME}/.nvm"

# OpenSSL
export PATH="$_PREFIX/openssl/bin:$PATH"

# GNU Grep
export PATH="$_PREFIX/grep/libexec/gnubin:$PATH"

# GNU TAR
export PATH="$_PREFIX/gnu-tar/libexec/gnubin:$PATH"

# GNU Indent
export PATH="$_PREFIX/gnu-indent/libexec/gnubin:$PATH"

# GNU getopt
export PATH="$_PREFIX/gnu-getopt/bin:$PATH"

# GNU find
export PATH="$_PREFIX/findutils/libexec/gnubin:$PATH"

# Go
export GOPATH="$HOME/go"
export PATH="$GOPATH/bin:$PATH"

# Ruby
export GEM_HOME="$HOME/gems"

if [ -d "$_PREFIX/opt/ruby" ]; then
  RUBY_INSTALL_PATH="$_PREFIX/opt/ruby"
elif [ -d "$_PREFIX/ruby" ]; then
  RUBY_INSTALL_PATH="$_PREFIX/ruby"
fi
if [ -d "$RUBY_INSTALL_PATH" ]; then
  export PATH="$RUBY_INSTALL_PATH/bin:$PATH"
fi

# Java
if [ -d "$_PREFIX/openjdk" ]; then
  JAVA_INSTALL_PATH="$_PREFIX/openjdk"
elif [ -d "$_PREFIX/opt/openjdk" ]; then
  JAVA_INSTALL_PATH="$_PREFIX/opt/openjdk"
fi
if [ -d "$JAVA_INSTALL_PATH" ]; then
  export JAVA_HOME="$JAVA_INSTALL_PATH"
  export PATH="$JAVA_INSTALL_PATH/bin:$PATH"
fi

# .NET Tools
export PATH="$PATH:$HOME/.dotnet/tools"

# GNU sed
export PATH="$_PREFIX/gnu-sed/libexec/gnubin:$PATH"

# .NET
export DOTNET_ROOT="$_PREFIX/dotnet/libexec"

# Deno
export PATH="$HOME/.deno/bin:$PATH"

# PNPM
export PNPM_HOME="/Users/asbjornu/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac

# curl
if [ -d "$_PREFIX/curl" ]; then
  CURL_INSTALL_PATH="$_PREFIX/curl"
elif [ -d "$_PREFIX/opt/curl" ]; then
  CURL_INSTALL_PATH="$_PREFIX/opt/curl"
fi
if [ -d "$CURL_INSTALL_PATH" ]; then
  export PATH="$CURL_INSTALL_PATH/bin:$PATH"
fi
